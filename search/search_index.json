{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u5230 Cyrus0w \u7684\u535a\u5ba2 \u00b6","title":"\u4e3b\u9875"},{"location":"#cyrus0w","text":"","title":"\u6b22\u8fce\u6765\u5230 Cyrus0w \u7684\u535a\u5ba2"},{"location":"about/","text":"\u8bf4\u660e \u00b6 \u6b64\u9875\u9762\u8bb0\u5f55\u4e86\u5f53\u524d\u548c\u5df2\u77e5\u7684\u5373\u5c06\u5230\u6765\u7684\u7ef4\u62a4\u7a97\u53e3\u3002 \u9650\u5236\u5168\u5c40\u5185\u5b58\u4f7f\u7528\uff0c2022 \u5e74 2 \u6708 14 \u65e5 \u00b6 \u6bcf\u4e2a\u7528\u6237\u7684\u5168\u5c40\u5185\u5b58\u5206\u914d\u9650\u5236\u662f\u6309\u5206\u533a\u8bbe\u7f6e\u7684\u3002 \u8be5\u503c\u8bbe\u7f6e\u4e3a\u201c\u6bcf\u4e2a\u7528\u6237\u7684\u6700\u5927 CPU \u8ba1\u6570 * 7GB\u201d\u3002 \u7528\u6237\u6700\u591a\u53ef\u4ee5\u5206\u914d\u201cmax cpu count\u201d CPU \u6216\u201cmax cpu count * 7GB\u201d RAM\u3002 Ganglia \u4fee\u590d\u548c\u6587\u6863\uff0c2022 \u5e74 2 \u6708 3 \u65e5 \u00b6 \u4fee\u590dGanglia\u4e2d\u7684 GPFS \u548c NVIDIA GPU \u76d1\u63a7 \u6839\u672c\u539f\u56e0\u662f Ganglia \u4e2d\u7684 Python \u6a21\u5757\u5df2\u4ece EPEL \u4e2d\u5220\u9664\u3002\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a Ganglia \u7684\u672c\u5730\u5305\u6784\u5efa\uff0c\u5982\u679c\u60a8\u6709\u5174\u8da3\uff0c\u8fd9\u91cc\u662f\u8865\u4e01\u548c\u57fa\u4e8e Docker \u7684\u6784\u5efa\u8bf4\u660e\u3002 \u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u6709\u5173\u6211\u4eec\u7684 Ganglia \u7684\u4e00\u4e9b\u6587\u6863\u3002 \u4ee5\u524d\u7684\u7ef4\u62a4 \u00b6 \u6ca1\u6709","title":"\u5f52\u6863"},{"location":"about/#_1","text":"\u6b64\u9875\u9762\u8bb0\u5f55\u4e86\u5f53\u524d\u548c\u5df2\u77e5\u7684\u5373\u5c06\u5230\u6765\u7684\u7ef4\u62a4\u7a97\u53e3\u3002","title":"\u8bf4\u660e"},{"location":"about/#2022-2-14","text":"\u6bcf\u4e2a\u7528\u6237\u7684\u5168\u5c40\u5185\u5b58\u5206\u914d\u9650\u5236\u662f\u6309\u5206\u533a\u8bbe\u7f6e\u7684\u3002 \u8be5\u503c\u8bbe\u7f6e\u4e3a\u201c\u6bcf\u4e2a\u7528\u6237\u7684\u6700\u5927 CPU \u8ba1\u6570 * 7GB\u201d\u3002 \u7528\u6237\u6700\u591a\u53ef\u4ee5\u5206\u914d\u201cmax cpu count\u201d CPU \u6216\u201cmax cpu count * 7GB\u201d RAM\u3002","title":"\u9650\u5236\u5168\u5c40\u5185\u5b58\u4f7f\u7528\uff0c2022 \u5e74 2 \u6708 14 \u65e5"},{"location":"about/#ganglia-2022-2-3","text":"\u4fee\u590dGanglia\u4e2d\u7684 GPFS \u548c NVIDIA GPU \u76d1\u63a7 \u6839\u672c\u539f\u56e0\u662f Ganglia \u4e2d\u7684 Python \u6a21\u5757\u5df2\u4ece EPEL \u4e2d\u5220\u9664\u3002\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a Ganglia \u7684\u672c\u5730\u5305\u6784\u5efa\uff0c\u5982\u679c\u60a8\u6709\u5174\u8da3\uff0c\u8fd9\u91cc\u662f\u8865\u4e01\u548c\u57fa\u4e8e Docker \u7684\u6784\u5efa\u8bf4\u660e\u3002 \u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u6709\u5173\u6211\u4eec\u7684 Ganglia \u7684\u4e00\u4e9b\u6587\u6863\u3002","title":"Ganglia \u4fee\u590d\u548c\u6587\u6863\uff0c2022 \u5e74 2 \u6708 3 \u65e5"},{"location":"about/#_2","text":"\u6ca1\u6709","title":"\u4ee5\u524d\u7684\u7ef4\u62a4"},{"location":"Cyrus0w/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/%E7%9B%91%E6%8E%A7/ganglia/","text":"ganglia\u76d1\u63a7slurm\u4f5c\u4e1a \u00b6 ganglia\u76d1\u63a7slurm\u4f5c\u4e1a \u524d\u8a00 \u4e00\u3001\u90e8\u7f72 1.1 \u63d2\u4ef6\u5de5\u4f5c\u539f\u7406\u8bf4\u660e 1.2 \u90e8\u7f72ganglia 1.3 \u90e8\u7f72postgresql\u6570\u636e\u5e93 1.4 \u90e8\u7f72\u914d\u7f6ejobarchived 1.5 \u8bbe\u7f6eganglia \u63d2\u4ef6web\u9875\u9762 1.6 \u90e8\u7f72PySlurm 1.7 \u90e8\u7f72\u914d\u7f6ejobmond 1.8 \u6700\u7ec8\u6d4b\u8bd5 \u7ed3\u8bed \u524d\u8a00 \u00b6 \u5b98\u65b9\u6559\u7a0b\uff1a https://oss.trac.surfsara.nl/jobmonarch \u6548\u679c\u56fe\uff1a \u96c6\u7fa4\u548c\u6240\u6709\u4f5c\u4e1a\u7684\u6982\u8ff0 \u96c6\u7fa4\u6982\u8ff0\uff0c\u4f5c\u4e1a\u8fc7\u6ee4\u6761\u4ef6\uff1a\u961f\u5217\u548c\u72b6\u6001 \u5de5\u4f5c\u89c6\u56fe \u4e00\u3001\u90e8\u7f72 \u00b6 1.1 \u63d2\u4ef6\u5de5\u4f5c\u539f\u7406\u8bf4\u660e \u00b6 1.2 \u90e8\u7f72ganglia \u00b6 \u8bf4\u660e\uff1a\u90e8\u7f72\u7565\uff0cganglia\u7248\u672cgmond >= v3.4.x \uff0cgmetad v3.4.x \uff0cGanglia web-2 frontend v3.5.x \uff0cGD v2.x , PHP v5.1 or higher \uff08with: postgres and GD support\uff09\u540c\u65f6\u6ce8\u610fserver\u7aef\u8fd8\u9700\u8981\u5148\u5b89\u88c5\u4ee5\u4e0b\u51e0\u4e2a\u57fa\u7840\u5305\uff1a yum install httpd php php-gd php-pgsql rrdtool perl-rrdtool rrdtool-devel rrdtool-python gd python-devel 1.3 \u90e8\u7f72postgresql\u6570\u636e\u5e93 \u00b6 # 1.\u5728ganglia server\u7aef\u90e8\u7f72\u6570\u636e\u5e93 yum install postgresql-server postgresql-devel postgresql # 2.\u521d\u59cb\u5316\u6570\u636e\u5e93 postgresql-setup initdb systemctl start postgresql # 3.\u8bbe\u7f6e\u5bc6\u7801 su - postgres psql \\p assword \\q exit # 4.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u4ee5\u4fbf\u767b\u5f55\u6570\u636e\u5e93\u65f6\u5fc5\u987b\u4f7f\u7528\u5bc6\u7801 vim /var/lib/pgsql/data/pg_hba.conf \u5982\u56fe(\u6539\u4e3amd5): # 5.\u91cd\u542f systemctl restart postgresql # 6.\u5b89\u88c5psycopg2\uff08\u7528\u6765python\u8c03\u7528postgresql\u6570\u636e\u5e93\uff09 pip install psycopg2 # 7.\u4e0b\u8f7d\u63d2\u4ef6\u6587\u4ef6\u5e76\u89e3\u538b\uff0c\u83b7\u53d6\u6570\u636e\u5e93\u8868\u6587\u4ef6 wget http://ftp.surfsara.nl/pub/outgoing/jobmonarch/1.1.2/ganglia_jobmonarch-1.1.2.tar.gz tar xf ganglia_jobmonarch-1.1.2.tar.gz # 8.\u521b\u5efajobarchive\u6570\u636e\u5e93 su - postgres createdb jobarchive cd ganglia_jobmonarch-1.1.2 psql -f jobarchived/job_dbase.sql jobarchive # 9.\u67e5\u770b\u6570\u636e\u5e93 \\l 1.4 \u90e8\u7f72\u914d\u7f6ejobarchived \u00b6 # 1.\u5728ganglia\u670d\u52a1\u7aef\u4e0b\u8f7d\u63d2\u4ef6\u6587\u4ef6\u5e76\u89e3\u538b(\u4e0a\u4e00\u6b65\u6570\u636e\u5e93\u5df2\u7ecf\u4e0b\u8f7d\u8fc7) wget http://ftp.surfsara.nl/pub/outgoing/jobmonarch/1.1.2/ganglia_jobmonarch-1.1.2.tar.gz tar xf ganglia_jobmonarch-1.1.2.tar.gz # 2.\u90e8\u7f72jobarchived cd ganglia_jobmonarch-1.1.2 cp jobarchived/jobarchived.conf /etc/jobarchived.conf cp jobarchived/jobarchived.py /usr/local/sbin/jobarchived.py # 3. \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\uff08\u7eff\u8272\u8bf4\u660e\u5904\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539\uff09 vim /etc/jobarchived.conf [ DEFAULT ] # Wether or not to run as a daemon in background # DAEMONIZE : 0 # Specify debugging level here (only when _not_ DAEMONIZE) # # 11 = XML: metrics # 10 = XML: host, cluster, grid, ganglia # 9 = RRD activity, gmetad config parsing # 8 = RRD file activity # 6 = SQL # 1 = daemon threading # 0 = errors # # default: 0 # DEBUG_LEVEL : 1 # Enable logging to syslog? # USE_SYSLOG : 1 # What level msg'es should be logged to syslog? # # usually: lvl 0 (errors) # SYSLOG_LEVEL : 0 # Which facility to use in syslog # # Known: # KERN, USER, MAIL, DAEMON, AUTH, LPR, # NEWS, UUCP, CRON and LOCAL0 through LOCAL7 # SYSLOG_FACILITY : DAEMON # Where is the gmetad.conf located # GMETAD_CONF : /etc/ganglia/gmetad.conf ` gmetad\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u4e00\u822c\u9ed8\u8ba4\u5728\u6b64\u8def\u5f84\u4e0b ` # Where to grab XML data from # Usually: local gmetad (port 8651) # # Syntax: <hostname>:<port> # ARCHIVE_XMLSOURCE : localhost:8651 ` ganglia\u670d\u52a1\u7aef\u5730\u5740\u548c\u7aef\u53e3\uff0c\u56e0\u4e3a\u5728\u672c\u673a\u4e2d\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5\u5199localhost:8651 ` # List of data_source names to archive for # # Syntax: [ \"<clustername>\", \"<clustername>\" ] # ARCHIVE_DATASOURCES : [ \"OGSAAS\" ] ` ganglia\u4e2d\u8bbe\u7f6e\u7684\u96c6\u7fa4\u540d\u79f0 ` # Amount of hours to store in one single archived rrd # # If you would like less files you can set this bigger # but could degrade performance # # For now 12 hours seems to work: 2 periods per day # ARCHIVE_HOURS_PER_RRD : 12 # Which metrics to exclude from archiving # NOTE: This can be a regexp or a string # ARCHIVE_EXCLUDE_METRICS : \".*Temp.*\" , \".*RPM.*\" , \".*Version.*\" , \".*Tag $ \" , \"boottime\" , \"gexec\" , \"os.*\" , \"machine_type\" # Where to store the archived rrd's # #ARCHIVE_PATH : __JOBARCHIVE_RRDS__ ARCHIVE_PATH : /usr/local/jobmonarch ` \u81ea\u5b9a\u4e49rrd\u6570\u636e\u5e93\u6570\u636e\u5b58\u50a8\u76ee\u5f55\uff0c\u540e\u9762\u63d2\u4ef6\u7684web\u9875\u9762\u8981\u8c03\u7528 ` # Archive's SQL dbase to use # # Syntax: <hostname>/<database> # JOB_SQL_DBASE : localhost/jobarchive ` \u6570\u636e\u5e93\u5730\u5740\u548c\u6570\u636e\u5e93\u540d\u79f0 ` JOB_SQL_USER : postgres ` \u6570\u636e\u5e93\u7528\u6237\u540d ` JOB_SQL_PASSWORD : 1qaz2WSX ` \u6570\u636e\u5e93\u5bc6\u7801 ` # Timeout for jobs in archive # # Assume job has already finished while jobarchived was not running # after this amount of hours: the it will be finished anyway in the database # JOB_TIMEOUT : 168 # Location of rrdtool binary # RRDTOOL : /usr/bin/rrdtool # 4.\u542f\u52a8\u4f5c\u4e1a\u5f52\u6863\u63d2\u4ef6 jobarchived.py # 5.\u68c0\u67e5\u63d2\u4ef6\u662f\u5426\u8fd0\u884c\u5728\u540e\u53f0 ps aux | grep jobarchived 1.5 \u8bbe\u7f6eganglia \u63d2\u4ef6web\u9875\u9762 \u00b6 # 1.\u5728\u524d\u9762\u4e0b\u8f7d\u89e3\u538b\u7684\u76ee\u5f55\u4e2d\uff0c\u5c06web\u6a21\u677f\u62f7\u8d1d\u5230ganglia\u9875\u9762\u7684\u6839\u76ee\u5f55\u4e2d cd ganglia_jobmonarch-1.1.2 cp -a web/templates/job_monarch /var/www/html/templates mkdir /var/www/html/addons cp -a web/addons/job_monarch /var/www/html/addons # 2.\u914d\u7f6eweb\u9875\u9762 vi /var/www/html/conf_default.php == > $conf [ 'template_name' ] = \"job_monarch\" ; vim /var/www/html/addons/job_monarch/conf.php <?php // Show hosts in a jobview by default? // $default_showhosts = true ; // Stop displaying archive search results after SEARCH_RESULT_LIMIT // $SEARCH_RESULT_LIMIT = 20 ; // Show the column job attribute 'requested memory'? // $COLUMN_REQUESTED_MEMORY = false ; // Show the column job attribute 'queued' (since)? // $COLUMN_QUEUED = true ; // Show the column job attribute 'nodes' hostnames? // $COLUMN_NODES = true ; // Path to Ganglia's web frontend root // // $GANGLIA_PATH = \"/data/ganglia-web-current/\"; $GANGLIA_PATH = \"/var/www/html\" ; `\u8fd9\u91cc\u5199ganglia\u9875\u9762\u7684\u6839\u76ee\u5f55` //$GANGLIA_PATH = \"../..\"; // Format of how to display a date and time in human readable format // $DATETIME_FORMAT = \"%a %d %b %Y %H:%M:%S\" ; // Max size of small clusterimage // (250 pixels is same width as Ganglia's pie chart) // $SMALL_CLUSTERIMAGE_MAXWIDTH = 300 ; // The size of a single node in the small clusterimage // $SMALL_CLUSTERIMAGE_NODEWIDTH = 7 ; // Max size of small clusterimage // (250 pixels is same width as Ganglia's pie chart) // $BIG_CLUSTERIMAGE_MAXWIDTH = 500 ; // The size of a single node in the small clusterimage // $BIG_CLUSTERIMAGE_NODEWIDTH = 11 ; // Max size of small host image // $SMALL_HOSTIMAGE_MAXWIDTH = 450 ; // How to mark nodes with a job in clusterimage // $JOB_NODE_MARKING = \"J\" ; // How to mark nodes that are 'down' in the batch // $NODE_DOWN_MARKING = \"X\" ; // How to mark nodes that are 'offline' in the batch // $NODE_OFFLINE_MARKING = \".\" ; // Show empty columns in the ClusterImage? // $SHOW_EMPTY_COLUMN = false ; // Show empty rows in the ClusterImage? // $SHOW_EMPTY_ROW = true ; // XML Datasource for Job Monarch // by default localhost's gmetad // [syntax: <ip>:<port>] // $DATA_SOURCE = '127.0.0.1:8652' ; `\u8fd9\u91cc\u5199\u672c\u5730\u5730\u5740\u5373\u53ef` // Is there a jobarchive? // $JOB_ARCHIVE = true ; // Path to the job archive rrd files // $JOB_ARCHIVE_DIR = \"/user/local/jobmonarch\" ; `\u8fd9\u91cc\u5199\u4e0a\u4e00\u6b65\u4e2d\u8bbe\u7f6e\u7684rrd\u6570\u636e\u5b58\u653e\u7684\u8def\u5f84` // Location of the job archive database // [syntax: <ip>/<dbase>] // $JOB_ARCHIVE_DBASE = \"127.0.0.1/jobarchive\" ; `\u6570\u636e\u5e93\u5730\u5740\u548c\u6570\u636e\u5e93\u540d\u79f0` $JOB_ARCHIVE_SQL_USER = \"postgres\" ; `\u6570\u636e\u5e93\u7528\u6237\u540d` $JOB_ARCHIVE_SQL_PASSWORD = \"1qaz2WSX\" ; `\u6570\u636e\u5e93\u5bc6\u7801` // Include cluster specific settings here, // they will override any (global) settings above // on a per-cluster basis, where available. // //$CLUSTER_CONFS[\"Example Cluster\"] = \"./clusterconf/example.php\"; $CLUSTER_CONFS [ \"LISA Cluster\" ] = \"./clusterconf/lisa.php\" ; // ?> 1.6 \u90e8\u7f72PySlurm \u00b6 \u8bf4\u660e\uff1a\u5728slurm\u670d\u52a1\u7aef\u90e8\u7f72PySlurm(\u6839\u636e\u4e0d\u540cslurm\u7248\u672c\u90e8\u7f72\u5bf9\u5e94\u7684pyslurm)\u5b98\u7f51\u8bf4\u660e\u5982\u4e0b\uff1a https://github.com/PySlurm/pyslurm/tree/basvandervlies-20.11 # 1.\u5b89\u88c5Cython yum install Cython # 2.\u6839\u636e\u5b98\u65b9\u8bf4\u660e\u8fdb\u884c\u90e8\u7f72 # 3.\u68c0\u67e5\u6d4b\u8bd5(\u6709\u76f8\u5173\u7684json\u6570\u636e\u663e\u793a\u8868\u793a\u90e8\u7f72\u6210\u529f) cd examples ./node_list.py 1.7 \u90e8\u7f72\u914d\u7f6ejobmond \u00b6 # 1.\u5728slurm\u670d\u52a1\u7aef\u4e0b\u8f7d\u63d2\u4ef6\u6587\u4ef6\u5e76\u89e3\u538b wget http://ftp.surfsara.nl/pub/outgoing/jobmonarch/1.1.2/ganglia_jobmonarch-1.1.2.tar.gz tar xf ganglia_jobmonarch-1.1.2.tar.gz # 2.\u90e8\u7f72jobmond cd ganglia_jobmonarch-1.1.2 cp -a jobmond/jobmond.py /usr/local/sbin/jobmond.py cp -a jobmond/jobmond.conf /etc/jobmond.conf # 3.\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6 vim /etc/jobmond.conf [ DEFAULT ] # Specify debugging level here; # # 10 = gemtric cmd's # DEBUG_LEVEL : 0 # Wether or not to run as a daemon in background # DAEMONIZE : 1 # What Batch type is the system # # Currently supported: pbs, slurm, sge (experimental), lsf (experimental) # BATCH_API : slurm ` \u76d1\u63a7\u7684\u8c03\u5ea6\u7cfb\u7edf\u7c7b\u578b ` # Which Batch server to monitor # BATCH_SERVER : localhost ` slurm\u670d\u52a1\u7aef\u5730\u5740 ` # Which queue(s) to report jobs of # (optional) # #QUEUE : long, short # How many seconds interval for polling of jobs # # this will effect directly how accurate the # end time of a job can be determined # BATCH_POLL_INTERVAL : 30 # Location of gmond.conf # # Default: /etc/gmond.conf ` \u8fd9\u91cc\u6ca1\u6709\u8bbe\u7f6e\uff0c\u4f1a\u9ed8\u8ba4\u5bfb\u627e/etc/gmond.conf ` # # DEPRECATED!: use GMETRIC_TARGET! # #GMOND_CONF : /etc/gmond.conf # # Location of gmetric binary # # Default: /usr/bin/gmetric # # DEPRECATED!: use GMETRIC_TARGET! # #GMETRIC_BINARY : /usr/bin/gmetric # Target of Gmetric's: where should we report to # (usually: your udp_send_channel from gmond) # # Syntax: <ip>:<port> # #GMETRIC_TARGET : 172.22.100.30:8649 ` \u8fd9\u91cc\u4e0d\u8bbe\u7f6e\uff0c\u4f1a\u81ea\u52a8\u83b7\u53d6gmond.conf\u4e2d\u4e0a\u62a5\u7ed9ganglia\u670d\u52a1\u7aef\u7684\u5730\u5740 ` # Enable logging to syslog? # USE_SYSLOG : 1 # What level msg'es should be logged to syslog? # # usually: lvl 0 (errors) # SYSLOG_LEVEL : 0 # Which facility to use in syslog # # Known: # KERN, USER, MAIL, DAEMON, AUTH, LPR, # NEWS, UUCP, CRON and LOCAL0 through LOCAL7 # SYSLOG_FACILITY : DAEMON # Wether or not to detect differences in # time from Torque server and local time. # # Ideally both machines (if not the same) # should have the same time (via ntp or whatever) # DETECT_TIME_DIFFS : 1 # Regexp style hostname translation # # Usefull if your Batch hostnames are not the same as your # Ganglia hostnames (different network interfaces) # # Syntax: /orig/new/, /orig/new/ # BATCH_HOST_TRANSLATE : # 4.\u542f\u52a8\u4f5c\u4e1a\u76d1\u63a7\u63d2\u4ef6 jobmond.py # \u6ce8\u610f\uff1a\u6b64\u65f6\u4f1a\u62a5\u9519\uff0c\u6839\u636e\u62a5\u9519\u7684\u884c\uff0c\u6709\u4e09\u5904\u9700\u8981\u4fee\u6539\uff0c\u7b2c\u4e00\u5904\u662f\u5c061374\u884c\u66f4\u6539\u4e3a\uff1astatus_long = self.getAttr( attrs, 'job_state' ) \uff1b\u540e\u9762\u4fe9\u5904\u6ce8\u91ca\u6389for\u5faa\u73af\u51e0\u884c\u4ee3\u7801 # \u4e4b\u540e\u518d\u542f\u52a8\u5373\u53ef # 5.\u68c0\u67e5\u63d2\u4ef6\u662f\u5426\u8fd0\u884c\u5728\u540e\u53f0 ps aux | grep jobmond 1.8 \u6700\u7ec8\u6d4b\u8bd5 \u00b6 \u6d4f\u89c8\u5668\u5f3a\u5237ganglia\u9875\u9762 \u7ed3\u8bed \u00b6 \u611f\u8c22\u60a8\u82b1\u8d39\u65f6\u95f4\u9605\u8bfb\u8fd9\u7bc7\u6559\u7a0b\uff0c\u5982\u679c\u559c\u6b22\u53ef\u4ee5\u5e2e\u5fd9\u8f6c\u53d1\u6216\u6536\u85cf\uff01\u795d\u60a8\u5728\u8fd9\u91cc\u8bb0\u5f55\u3001\u9605\u8bfb\u3001\u5206\u4eab\u6109\u5feb\uff01 \u4f5c\u8005 @cyrus0w 2022 \u5e74 2\u6708 16\u65e5","title":"ganglia\u76d1\u63a7slurm\u4f5c\u4e1a"},{"location":"Cyrus0w/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/%E7%9B%91%E6%8E%A7/ganglia/#gangliaslurm","text":"ganglia\u76d1\u63a7slurm\u4f5c\u4e1a \u524d\u8a00 \u4e00\u3001\u90e8\u7f72 1.1 \u63d2\u4ef6\u5de5\u4f5c\u539f\u7406\u8bf4\u660e 1.2 \u90e8\u7f72ganglia 1.3 \u90e8\u7f72postgresql\u6570\u636e\u5e93 1.4 \u90e8\u7f72\u914d\u7f6ejobarchived 1.5 \u8bbe\u7f6eganglia \u63d2\u4ef6web\u9875\u9762 1.6 \u90e8\u7f72PySlurm 1.7 \u90e8\u7f72\u914d\u7f6ejobmond 1.8 \u6700\u7ec8\u6d4b\u8bd5 \u7ed3\u8bed","title":"ganglia\u76d1\u63a7slurm\u4f5c\u4e1a"},{"location":"Cyrus0w/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/%E7%9B%91%E6%8E%A7/ganglia/#_1","text":"\u5b98\u65b9\u6559\u7a0b\uff1a https://oss.trac.surfsara.nl/jobmonarch \u6548\u679c\u56fe\uff1a \u96c6\u7fa4\u548c\u6240\u6709\u4f5c\u4e1a\u7684\u6982\u8ff0 \u96c6\u7fa4\u6982\u8ff0\uff0c\u4f5c\u4e1a\u8fc7\u6ee4\u6761\u4ef6\uff1a\u961f\u5217\u548c\u72b6\u6001 \u5de5\u4f5c\u89c6\u56fe","title":"\u524d\u8a00"},{"location":"Cyrus0w/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/%E7%9B%91%E6%8E%A7/ganglia/#_2","text":"","title":"\u4e00\u3001\u90e8\u7f72"},{"location":"Cyrus0w/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/%E7%9B%91%E6%8E%A7/ganglia/#11","text":"","title":"1.1 \u63d2\u4ef6\u5de5\u4f5c\u539f\u7406\u8bf4\u660e"},{"location":"Cyrus0w/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/%E7%9B%91%E6%8E%A7/ganglia/#12-ganglia","text":"\u8bf4\u660e\uff1a\u90e8\u7f72\u7565\uff0cganglia\u7248\u672cgmond >= v3.4.x \uff0cgmetad v3.4.x \uff0cGanglia web-2 frontend v3.5.x \uff0cGD v2.x , PHP v5.1 or higher \uff08with: postgres and GD support\uff09\u540c\u65f6\u6ce8\u610fserver\u7aef\u8fd8\u9700\u8981\u5148\u5b89\u88c5\u4ee5\u4e0b\u51e0\u4e2a\u57fa\u7840\u5305\uff1a yum install httpd php php-gd php-pgsql rrdtool perl-rrdtool rrdtool-devel rrdtool-python gd python-devel","title":"1.2 \u90e8\u7f72ganglia"},{"location":"Cyrus0w/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/%E7%9B%91%E6%8E%A7/ganglia/#13-postgresql","text":"# 1.\u5728ganglia server\u7aef\u90e8\u7f72\u6570\u636e\u5e93 yum install postgresql-server postgresql-devel postgresql # 2.\u521d\u59cb\u5316\u6570\u636e\u5e93 postgresql-setup initdb systemctl start postgresql # 3.\u8bbe\u7f6e\u5bc6\u7801 su - postgres psql \\p assword \\q exit # 4.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u4ee5\u4fbf\u767b\u5f55\u6570\u636e\u5e93\u65f6\u5fc5\u987b\u4f7f\u7528\u5bc6\u7801 vim /var/lib/pgsql/data/pg_hba.conf \u5982\u56fe(\u6539\u4e3amd5): # 5.\u91cd\u542f systemctl restart postgresql # 6.\u5b89\u88c5psycopg2\uff08\u7528\u6765python\u8c03\u7528postgresql\u6570\u636e\u5e93\uff09 pip install psycopg2 # 7.\u4e0b\u8f7d\u63d2\u4ef6\u6587\u4ef6\u5e76\u89e3\u538b\uff0c\u83b7\u53d6\u6570\u636e\u5e93\u8868\u6587\u4ef6 wget http://ftp.surfsara.nl/pub/outgoing/jobmonarch/1.1.2/ganglia_jobmonarch-1.1.2.tar.gz tar xf ganglia_jobmonarch-1.1.2.tar.gz # 8.\u521b\u5efajobarchive\u6570\u636e\u5e93 su - postgres createdb jobarchive cd ganglia_jobmonarch-1.1.2 psql -f jobarchived/job_dbase.sql jobarchive # 9.\u67e5\u770b\u6570\u636e\u5e93 \\l","title":"1.3 \u90e8\u7f72postgresql\u6570\u636e\u5e93"},{"location":"Cyrus0w/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/%E7%9B%91%E6%8E%A7/ganglia/#14-jobarchived","text":"# 1.\u5728ganglia\u670d\u52a1\u7aef\u4e0b\u8f7d\u63d2\u4ef6\u6587\u4ef6\u5e76\u89e3\u538b(\u4e0a\u4e00\u6b65\u6570\u636e\u5e93\u5df2\u7ecf\u4e0b\u8f7d\u8fc7) wget http://ftp.surfsara.nl/pub/outgoing/jobmonarch/1.1.2/ganglia_jobmonarch-1.1.2.tar.gz tar xf ganglia_jobmonarch-1.1.2.tar.gz # 2.\u90e8\u7f72jobarchived cd ganglia_jobmonarch-1.1.2 cp jobarchived/jobarchived.conf /etc/jobarchived.conf cp jobarchived/jobarchived.py /usr/local/sbin/jobarchived.py # 3. \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\uff08\u7eff\u8272\u8bf4\u660e\u5904\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539\uff09 vim /etc/jobarchived.conf [ DEFAULT ] # Wether or not to run as a daemon in background # DAEMONIZE : 0 # Specify debugging level here (only when _not_ DAEMONIZE) # # 11 = XML: metrics # 10 = XML: host, cluster, grid, ganglia # 9 = RRD activity, gmetad config parsing # 8 = RRD file activity # 6 = SQL # 1 = daemon threading # 0 = errors # # default: 0 # DEBUG_LEVEL : 1 # Enable logging to syslog? # USE_SYSLOG : 1 # What level msg'es should be logged to syslog? # # usually: lvl 0 (errors) # SYSLOG_LEVEL : 0 # Which facility to use in syslog # # Known: # KERN, USER, MAIL, DAEMON, AUTH, LPR, # NEWS, UUCP, CRON and LOCAL0 through LOCAL7 # SYSLOG_FACILITY : DAEMON # Where is the gmetad.conf located # GMETAD_CONF : /etc/ganglia/gmetad.conf ` gmetad\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u4e00\u822c\u9ed8\u8ba4\u5728\u6b64\u8def\u5f84\u4e0b ` # Where to grab XML data from # Usually: local gmetad (port 8651) # # Syntax: <hostname>:<port> # ARCHIVE_XMLSOURCE : localhost:8651 ` ganglia\u670d\u52a1\u7aef\u5730\u5740\u548c\u7aef\u53e3\uff0c\u56e0\u4e3a\u5728\u672c\u673a\u4e2d\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5\u5199localhost:8651 ` # List of data_source names to archive for # # Syntax: [ \"<clustername>\", \"<clustername>\" ] # ARCHIVE_DATASOURCES : [ \"OGSAAS\" ] ` ganglia\u4e2d\u8bbe\u7f6e\u7684\u96c6\u7fa4\u540d\u79f0 ` # Amount of hours to store in one single archived rrd # # If you would like less files you can set this bigger # but could degrade performance # # For now 12 hours seems to work: 2 periods per day # ARCHIVE_HOURS_PER_RRD : 12 # Which metrics to exclude from archiving # NOTE: This can be a regexp or a string # ARCHIVE_EXCLUDE_METRICS : \".*Temp.*\" , \".*RPM.*\" , \".*Version.*\" , \".*Tag $ \" , \"boottime\" , \"gexec\" , \"os.*\" , \"machine_type\" # Where to store the archived rrd's # #ARCHIVE_PATH : __JOBARCHIVE_RRDS__ ARCHIVE_PATH : /usr/local/jobmonarch ` \u81ea\u5b9a\u4e49rrd\u6570\u636e\u5e93\u6570\u636e\u5b58\u50a8\u76ee\u5f55\uff0c\u540e\u9762\u63d2\u4ef6\u7684web\u9875\u9762\u8981\u8c03\u7528 ` # Archive's SQL dbase to use # # Syntax: <hostname>/<database> # JOB_SQL_DBASE : localhost/jobarchive ` \u6570\u636e\u5e93\u5730\u5740\u548c\u6570\u636e\u5e93\u540d\u79f0 ` JOB_SQL_USER : postgres ` \u6570\u636e\u5e93\u7528\u6237\u540d ` JOB_SQL_PASSWORD : 1qaz2WSX ` \u6570\u636e\u5e93\u5bc6\u7801 ` # Timeout for jobs in archive # # Assume job has already finished while jobarchived was not running # after this amount of hours: the it will be finished anyway in the database # JOB_TIMEOUT : 168 # Location of rrdtool binary # RRDTOOL : /usr/bin/rrdtool # 4.\u542f\u52a8\u4f5c\u4e1a\u5f52\u6863\u63d2\u4ef6 jobarchived.py # 5.\u68c0\u67e5\u63d2\u4ef6\u662f\u5426\u8fd0\u884c\u5728\u540e\u53f0 ps aux | grep jobarchived","title":"1.4 \u90e8\u7f72\u914d\u7f6ejobarchived"},{"location":"Cyrus0w/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/%E7%9B%91%E6%8E%A7/ganglia/#15-ganglia-web","text":"# 1.\u5728\u524d\u9762\u4e0b\u8f7d\u89e3\u538b\u7684\u76ee\u5f55\u4e2d\uff0c\u5c06web\u6a21\u677f\u62f7\u8d1d\u5230ganglia\u9875\u9762\u7684\u6839\u76ee\u5f55\u4e2d cd ganglia_jobmonarch-1.1.2 cp -a web/templates/job_monarch /var/www/html/templates mkdir /var/www/html/addons cp -a web/addons/job_monarch /var/www/html/addons # 2.\u914d\u7f6eweb\u9875\u9762 vi /var/www/html/conf_default.php == > $conf [ 'template_name' ] = \"job_monarch\" ; vim /var/www/html/addons/job_monarch/conf.php <?php // Show hosts in a jobview by default? // $default_showhosts = true ; // Stop displaying archive search results after SEARCH_RESULT_LIMIT // $SEARCH_RESULT_LIMIT = 20 ; // Show the column job attribute 'requested memory'? // $COLUMN_REQUESTED_MEMORY = false ; // Show the column job attribute 'queued' (since)? // $COLUMN_QUEUED = true ; // Show the column job attribute 'nodes' hostnames? // $COLUMN_NODES = true ; // Path to Ganglia's web frontend root // // $GANGLIA_PATH = \"/data/ganglia-web-current/\"; $GANGLIA_PATH = \"/var/www/html\" ; `\u8fd9\u91cc\u5199ganglia\u9875\u9762\u7684\u6839\u76ee\u5f55` //$GANGLIA_PATH = \"../..\"; // Format of how to display a date and time in human readable format // $DATETIME_FORMAT = \"%a %d %b %Y %H:%M:%S\" ; // Max size of small clusterimage // (250 pixels is same width as Ganglia's pie chart) // $SMALL_CLUSTERIMAGE_MAXWIDTH = 300 ; // The size of a single node in the small clusterimage // $SMALL_CLUSTERIMAGE_NODEWIDTH = 7 ; // Max size of small clusterimage // (250 pixels is same width as Ganglia's pie chart) // $BIG_CLUSTERIMAGE_MAXWIDTH = 500 ; // The size of a single node in the small clusterimage // $BIG_CLUSTERIMAGE_NODEWIDTH = 11 ; // Max size of small host image // $SMALL_HOSTIMAGE_MAXWIDTH = 450 ; // How to mark nodes with a job in clusterimage // $JOB_NODE_MARKING = \"J\" ; // How to mark nodes that are 'down' in the batch // $NODE_DOWN_MARKING = \"X\" ; // How to mark nodes that are 'offline' in the batch // $NODE_OFFLINE_MARKING = \".\" ; // Show empty columns in the ClusterImage? // $SHOW_EMPTY_COLUMN = false ; // Show empty rows in the ClusterImage? // $SHOW_EMPTY_ROW = true ; // XML Datasource for Job Monarch // by default localhost's gmetad // [syntax: <ip>:<port>] // $DATA_SOURCE = '127.0.0.1:8652' ; `\u8fd9\u91cc\u5199\u672c\u5730\u5730\u5740\u5373\u53ef` // Is there a jobarchive? // $JOB_ARCHIVE = true ; // Path to the job archive rrd files // $JOB_ARCHIVE_DIR = \"/user/local/jobmonarch\" ; `\u8fd9\u91cc\u5199\u4e0a\u4e00\u6b65\u4e2d\u8bbe\u7f6e\u7684rrd\u6570\u636e\u5b58\u653e\u7684\u8def\u5f84` // Location of the job archive database // [syntax: <ip>/<dbase>] // $JOB_ARCHIVE_DBASE = \"127.0.0.1/jobarchive\" ; `\u6570\u636e\u5e93\u5730\u5740\u548c\u6570\u636e\u5e93\u540d\u79f0` $JOB_ARCHIVE_SQL_USER = \"postgres\" ; `\u6570\u636e\u5e93\u7528\u6237\u540d` $JOB_ARCHIVE_SQL_PASSWORD = \"1qaz2WSX\" ; `\u6570\u636e\u5e93\u5bc6\u7801` // Include cluster specific settings here, // they will override any (global) settings above // on a per-cluster basis, where available. // //$CLUSTER_CONFS[\"Example Cluster\"] = \"./clusterconf/example.php\"; $CLUSTER_CONFS [ \"LISA Cluster\" ] = \"./clusterconf/lisa.php\" ; // ?>","title":"1.5 \u8bbe\u7f6eganglia \u63d2\u4ef6web\u9875\u9762"},{"location":"Cyrus0w/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/%E7%9B%91%E6%8E%A7/ganglia/#16-pyslurm","text":"\u8bf4\u660e\uff1a\u5728slurm\u670d\u52a1\u7aef\u90e8\u7f72PySlurm(\u6839\u636e\u4e0d\u540cslurm\u7248\u672c\u90e8\u7f72\u5bf9\u5e94\u7684pyslurm)\u5b98\u7f51\u8bf4\u660e\u5982\u4e0b\uff1a https://github.com/PySlurm/pyslurm/tree/basvandervlies-20.11 # 1.\u5b89\u88c5Cython yum install Cython # 2.\u6839\u636e\u5b98\u65b9\u8bf4\u660e\u8fdb\u884c\u90e8\u7f72 # 3.\u68c0\u67e5\u6d4b\u8bd5(\u6709\u76f8\u5173\u7684json\u6570\u636e\u663e\u793a\u8868\u793a\u90e8\u7f72\u6210\u529f) cd examples ./node_list.py","title":"1.6 \u90e8\u7f72PySlurm"},{"location":"Cyrus0w/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/%E7%9B%91%E6%8E%A7/ganglia/#17-jobmond","text":"# 1.\u5728slurm\u670d\u52a1\u7aef\u4e0b\u8f7d\u63d2\u4ef6\u6587\u4ef6\u5e76\u89e3\u538b wget http://ftp.surfsara.nl/pub/outgoing/jobmonarch/1.1.2/ganglia_jobmonarch-1.1.2.tar.gz tar xf ganglia_jobmonarch-1.1.2.tar.gz # 2.\u90e8\u7f72jobmond cd ganglia_jobmonarch-1.1.2 cp -a jobmond/jobmond.py /usr/local/sbin/jobmond.py cp -a jobmond/jobmond.conf /etc/jobmond.conf # 3.\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6 vim /etc/jobmond.conf [ DEFAULT ] # Specify debugging level here; # # 10 = gemtric cmd's # DEBUG_LEVEL : 0 # Wether or not to run as a daemon in background # DAEMONIZE : 1 # What Batch type is the system # # Currently supported: pbs, slurm, sge (experimental), lsf (experimental) # BATCH_API : slurm ` \u76d1\u63a7\u7684\u8c03\u5ea6\u7cfb\u7edf\u7c7b\u578b ` # Which Batch server to monitor # BATCH_SERVER : localhost ` slurm\u670d\u52a1\u7aef\u5730\u5740 ` # Which queue(s) to report jobs of # (optional) # #QUEUE : long, short # How many seconds interval for polling of jobs # # this will effect directly how accurate the # end time of a job can be determined # BATCH_POLL_INTERVAL : 30 # Location of gmond.conf # # Default: /etc/gmond.conf ` \u8fd9\u91cc\u6ca1\u6709\u8bbe\u7f6e\uff0c\u4f1a\u9ed8\u8ba4\u5bfb\u627e/etc/gmond.conf ` # # DEPRECATED!: use GMETRIC_TARGET! # #GMOND_CONF : /etc/gmond.conf # # Location of gmetric binary # # Default: /usr/bin/gmetric # # DEPRECATED!: use GMETRIC_TARGET! # #GMETRIC_BINARY : /usr/bin/gmetric # Target of Gmetric's: where should we report to # (usually: your udp_send_channel from gmond) # # Syntax: <ip>:<port> # #GMETRIC_TARGET : 172.22.100.30:8649 ` \u8fd9\u91cc\u4e0d\u8bbe\u7f6e\uff0c\u4f1a\u81ea\u52a8\u83b7\u53d6gmond.conf\u4e2d\u4e0a\u62a5\u7ed9ganglia\u670d\u52a1\u7aef\u7684\u5730\u5740 ` # Enable logging to syslog? # USE_SYSLOG : 1 # What level msg'es should be logged to syslog? # # usually: lvl 0 (errors) # SYSLOG_LEVEL : 0 # Which facility to use in syslog # # Known: # KERN, USER, MAIL, DAEMON, AUTH, LPR, # NEWS, UUCP, CRON and LOCAL0 through LOCAL7 # SYSLOG_FACILITY : DAEMON # Wether or not to detect differences in # time from Torque server and local time. # # Ideally both machines (if not the same) # should have the same time (via ntp or whatever) # DETECT_TIME_DIFFS : 1 # Regexp style hostname translation # # Usefull if your Batch hostnames are not the same as your # Ganglia hostnames (different network interfaces) # # Syntax: /orig/new/, /orig/new/ # BATCH_HOST_TRANSLATE : # 4.\u542f\u52a8\u4f5c\u4e1a\u76d1\u63a7\u63d2\u4ef6 jobmond.py # \u6ce8\u610f\uff1a\u6b64\u65f6\u4f1a\u62a5\u9519\uff0c\u6839\u636e\u62a5\u9519\u7684\u884c\uff0c\u6709\u4e09\u5904\u9700\u8981\u4fee\u6539\uff0c\u7b2c\u4e00\u5904\u662f\u5c061374\u884c\u66f4\u6539\u4e3a\uff1astatus_long = self.getAttr( attrs, 'job_state' ) \uff1b\u540e\u9762\u4fe9\u5904\u6ce8\u91ca\u6389for\u5faa\u73af\u51e0\u884c\u4ee3\u7801 # \u4e4b\u540e\u518d\u542f\u52a8\u5373\u53ef # 5.\u68c0\u67e5\u63d2\u4ef6\u662f\u5426\u8fd0\u884c\u5728\u540e\u53f0 ps aux | grep jobmond","title":"1.7 \u90e8\u7f72\u914d\u7f6ejobmond"},{"location":"Cyrus0w/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/%E7%9B%91%E6%8E%A7/ganglia/#18","text":"\u6d4f\u89c8\u5668\u5f3a\u5237ganglia\u9875\u9762","title":"1.8 \u6700\u7ec8\u6d4b\u8bd5"},{"location":"Cyrus0w/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/%E7%9B%91%E6%8E%A7/ganglia/#_3","text":"\u611f\u8c22\u60a8\u82b1\u8d39\u65f6\u95f4\u9605\u8bfb\u8fd9\u7bc7\u6559\u7a0b\uff0c\u5982\u679c\u559c\u6b22\u53ef\u4ee5\u5e2e\u5fd9\u8f6c\u53d1\u6216\u6536\u85cf\uff01\u795d\u60a8\u5728\u8fd9\u91cc\u8bb0\u5f55\u3001\u9605\u8bfb\u3001\u5206\u4eab\u6109\u5feb\uff01 \u4f5c\u8005 @cyrus0w 2022 \u5e74 2\u6708 16\u65e5","title":"\u7ed3\u8bed"}]}